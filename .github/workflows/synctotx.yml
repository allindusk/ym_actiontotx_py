#定时同步github代码 +0000时区 北京时间-8
name: 同步代码并部署到腾讯云
on:
  workflow_dispatch:
#   schedule:
#     - cron: 0 15 * * *
jobs:
  repo-sync:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: "Set up Python"
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: "安装依赖 serverless工具"
        run: |
          pip install -r ./requirements.txt -t .
          sudo npm install serverless -g
          serverless -v;node -v;npm -v
      - name: "下载raw脚本"
        run: python3 dlcode.py
      - name: "运行xmly_replconfig"
        run: python3 xmly_replconfig.py
      # - name: commit-push code
      #   run: |
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com
      #     git add -A
      #     git_status=$(git status)
      #     if [[ "$git_status" != *"up to date"* ]];then git commit -m "sync code by action"&&git push;fi;
      #     rm -rf .git
      #     ls -a
      - name: "查看目录情况"
        run: ls -a;du -h --max-depth=1
      - name: "将Secrets里面配置的变量添加到severless.yml里面作为环境变量"
        run: |
          if [ $SCF_REGION ]; then sed -i "s/region:.*$/region: $SCF_REGION/g" serverless.yml; fi;
          if [ $XMLY_SPEED_COOKIE ]; then sed -i "/variables/a\      XMLY_SPEED_COOKIE: $XMLY_SPEED_COOKIE" serverless.yml; fi;
          if [ $JD_COOKIE ]; then sed -i "/variables/a\      JD_COOKIE: $JD_COOKIE" serverless.yml; fi;
          if [ $JD_DEBUG ]; then sed -i "/variables/a\      JD_DEBUG: $JD_DEBUG" serverless.yml; fi;
          if [ $JD_USER_AGENT ]; then sed -i "/variables/a\      JD_USER_AGENT: $JD_USER_AGENT" serverless.yml; fi;
          if [ $PUSH_KEY ]; then sed -i "/variables/a\      PUSH_KEY: $PUSH_KEY" serverless.yml; fi;
          if [ $BARK_PUSH ]; then sed -i "/variables/a\      BARK_PUSH: $BARK_PUSH" serverless.yml; fi;
          if [ $BARK_SOUND ]; then sed -i "/variables/a\      BARK_SOUND: $BARK_SOUND" serverless.yml; fi;
          if [ $TG_BOT_TOKEN ]; then sed -i "/variables/a\      TG_BOT_TOKEN: $TG_BOT_TOKEN" serverless.yml; fi;
          if [ $TG_USER_ID ]; then sed -i "/variables/a\      TG_USER_ID: $TG_USER_ID" serverless.yml; fi;
          if [ $DD_BOT_TOKEN ]; then sed -i "/variables/a\      DD_BOT_TOKEN: $DD_BOT_TOKEN" serverless.yml; fi;
          if [ $DD_BOT_SECRET ]; then sed -i "/variables/a\      DD_BOT_SECRET: $DD_BOT_SECRET" serverless.yml; fi;
          if [ $QYWX_KEY ]; then sed -i "/variables/a\      QYWX_KEY: $QYWX_KEY" serverless.yml; fi;
          if [ $IGOT_PUSH_KEY ]; then sed -i "/variables/a\      IGOT_PUSH_KEY: $IGOT_PUSH_KEY" serverless.yml; fi;
          if [ $QQ_SKEY ]; then sed -i "/variables/a\      QQ_SKEY: $QQ_SKEY" serverless.yml; fi;
          if [ $QQ_MODE ]; then sed -i "/variables/a\      QQ_MODE: $QQ_MODE" serverless.yml; fi;
          cat serverless.yml
        env: #因为直接读取secrets里面的值很多字符不会自动转译，导致写入serverless.yml异常，所以设置到环境变量，在读取环境变量转译过的值
          SCF_REGION: "${{ secrets.SCF_REGION }}"
          XMLY_SPEED_COOKIE: "${{ secrets.XMLY_SPEED_COOKIE }}"
          JD_COOKIE: "${{ secrets.JD_COOKIE}}"
          JD_DEBUG: "${{ secrets.JD_DEBUG}}"
          JD_USER_AGENT: "${{ secrets.JD_USER_AGENT}}"
          PUSH_KEY: "${{ secrets.PUSH_KEY}}"
          BARK_PUSH: "${{ secrets.BARK_PUSH}}"
          BARK_SOUND: "${{ secrets.BARK_SOUND}}"
          TG_BOT_TOKEN: "${{ secrets.TG_BOT_TOKEN}}"
          TG_USER_ID: "${{ secrets.TG_USER_ID}}"
          DD_BOT_TOKEN: "${{ secrets.DD_BOT_TOKEN}}"
          DD_BOT_SECRET: ${{ secrets.DD_BOT_SECRET}}
          QYWX_KEY: "${{ secrets.QYWX_KEY}}"
          IGOT_PUSH_KEY: "${{ secrets.IGOT_PUSH_KEY}}"
          QQ_SKEY: "${{ secrets.QQ_SKEY}}"
          QQ_MODE: "${{ secrets.QQ_MODE}}"
      - name: "部署到腾讯云函数"
        run: serverless deploy
        env:
          STAGE: dev
          SERVERLESS_PLATFORM_VENDOR: tencent
          TENCENT_SECRET_ID: ${{ secrets.TENCENT_SECRET_ID }}
          TENCENT_SECRET_KEY: ${{ secrets.TENCENT_SECRET_KEY }}